---
import WeeklyOverview from '../components/WeeklyOverview.jsx';
import spots from "../data/spots_with_wind_top50.json";

const { spotId } = Astro.params;

// ‚úÖ Tijdens runtime: forecast-data uit Open-Meteo API lezen
let forecastData = {};
let source = 'openmeteo';

try {
  // Use absolute URL for server-side fetch in Astro
  const baseUrl = Astro.url.origin;
  const apiUrl = `${baseUrl}/api/forecast?spotId=${spotId}`;
  console.log(`üîç Fetching from: ${apiUrl}`);
  
  const response = await fetch(apiUrl);
  console.log(`üì° Response status: ${response.status}`);
  
  if (response.ok) {
    const apiData = await response.json();
    forecastData = apiData.forecast || {};
    source = apiData.source || 'openmeteo';
    console.log(`‚úÖ Loaded Open-Meteo data for ${spotId}:`, Object.keys(forecastData));
  } else {
    console.log(`‚ùå Open-Meteo API failed for ${spotId} (${response.status}), falling back to file data`);
    throw new Error('API failed');
  }
} catch (error) {
  console.log(`‚ö†Ô∏è Falling back to file data for ${spotId}:`, error.message);
  
  // Fallback to file-based data
  try {
    const forecastPath = new URL(`../../public/data/forecastData/${spotId}.json`, import.meta.url);
    const fileContent = await fetch(forecastPath).then(r => r.text());
    forecastData = JSON.parse(fileContent);
    source = 'file';
    console.log(`Loaded file data for ${spotId}:`, Object.keys(forecastData));
  } catch (fileError) {
    console.error(`Failed to load data for ${spotId}:`, fileError);
    forecastData = {};
  }
}

// Find spot details
const spot = spots.find(s => s.spotId === spotId);
const spotName = spot ? spot.name : spotId;
---

<html lang="nl">
  <head>
    <style is:global>
      @import "../styles/global.css";
    </style>
    <meta charset="UTF-8" />
    <title>Kitesurf Voorspelling ‚Äì {spotName}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>
  <body class="bg-amber-50 font-sans text-gray-800 min-h-screen">
    <header class="bg-cyan-700 text-white text-center p-3 sm:p-4">
      <div class="flex justify-between items-center mb-2">
        <a href="/" class="text-sm text-cyan-200 hover:text-white transition-colors px-2 py-1 rounded hover:bg-cyan-600">
          ‚Üê Terug naar kaart
        </a>
        <h1 class="text-xl sm:text-2xl md:text-3xl font-semibold px-4">
          Kitesurf Voorspelling ‚Äì {spotName}
        </h1>
        <div class="w-24"></div> {/* Spacer for balance */}
      </div>
    </header>

    <main class="w-full max-w-7xl mx-auto px-3 sm:px-4 lg:px-6 py-3 sm:py-4 lg:py-6 space-y-4 sm:space-y-6">
      <WeeklyOverview client:only="react" forecastData={forecastData} spotId={spotId} source={source} />
    </main>
  </body>
</html>
